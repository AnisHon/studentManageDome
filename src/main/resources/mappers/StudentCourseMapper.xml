<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anishan.dome.mapper.StudentCourseMapper">

    <resultMap id="BaseResultMap" type="com.anishan.dome.domain.entity.StudentCourse">
            <id property="teachId" column="teach_id" jdbcType="BIGINT"/>
            <id property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="score" column="score" jdbcType="DECIMAL"/>
    </resultMap>

    <delete id="deleteBatchInSchoolYear">
        <foreach collection="e in list">
            delete from student_course
                   where
                       user_id = e.userId and
                       teach_id = e.teachId and
                       (select c.school_year from teacher_course t left join course c on t.course_id = c.course_id) = #{year}
        </foreach>
    </delete>
    <update id="removeScore">
        <foreach collection="item in list">
            update student_course set score = null
            where teach_id = #{item.teach_id} and
                  user_id = #{user_id}
        </foreach>
    </update>


    <resultMap id="EnrollCourseMap" type="com.anishan.dome.domain.vo.EnrollCourse">
        <id property="courseId" column="course_id"/>
        <result property="courseName" column="user_id"/>
        <result property="credit" column="user_id"/>
        <result property="duration" column="user_id"/>
        <result property="schoolYear" column="score"/>
        <result property="teacherName" column="score"/>
        <result property="institution" column="score"/>
    </resultMap>

    <select id="selectAvailable" resultMap="EnrollCourseMap">
        select
            c.course_id as course_id,
            c.course_name as course_name,
            c.credit as credit,
            c.duration as duration,
            c.school_year as school_year,
            su.username as username,
            t.institution as institution
        from teacher_course tc
            left join course c on c.course_id = tc.course_id
            left join teacher t on t.user_id = tc.user_id
            left join sys_user su on su.user_id = t.user_id

        ${ew.customSqlSegment}

        limit ${limit}, ${offset}

    </select>


    <select id="countAvailable" resultType="long">
        select
            count(*)
        from teacher_course tc
            left join course c on c.course_id = tc.course_id

        where c.school_year = #{schoolYear}
    </select>

    <select id="selectByUser" resultMap="EnrollCourseMap">
        select
            c.course_id as course_id,
            c.course_name as course_name,
            tc.teach_id as teach_id,
            c.credit as credit,
            c.duration as duration,
            c.school_year as school_year,
            su.username as username,
            t.institution as institution
        from teacher_course tc
            left join course c on c.course_id = tc.course_id
            left join teacher t on t.user_id = tc.user_id
            left join sys_user su on su.user_id = t.user_id
            left join student_course sc on sc.teach_id = tc.teach_id
        where
            c.school_year = #{schoolYear} and
            sc.user_id = #{userId}
    </select>
    <select id="selectScoreVos" resultType="com.anishan.dome.domain.vo.ScoreVo">
        select
            sc.user_id as studentId,
            c.course_id as course_id,
            s.class_id as class_id,
            su.username as student_name,
            c.course_name as course_name,
            c.school_year as school_year,
            sc.score as score
        from student_course sc
        left join teacher_course tc on tc.teach_id = sc.teach_id
        left join student s on s.user_id = sc.user_id
        left join sys_user su on su.user_id = s.user_id
        left join course c on tc.course_id = c.course_id

        ${ew.customSqlSegment}
    </select>
    <select id="countScores" resultType="java.lang.Long">
        select
            count(*)
        from student_course sc
                 left join teacher_course tc on tc.teach_id = sc.teach_id
                 left join course c on tc.course_id = c.course_id
        where c.school_year = #{schoolYear}
    </select>
    <select id="statistic" resultType="com.anishan.dome.domain.vo.StatisticResult">
        select
            c.class_id as class_id,
            tc.teach_id as teach_id,
            c.class_name as class_name,
            cour.course_name as course_name,
            avg(sc.score) as average_score,
            max(sc.score) as max_score,
            min(sc.score) as min_score,
            COUNT(CASE WHEN score > 60 THEN 1 END) as pass,
            COUNT(CASE WHEN score > 60 THEN 1 END) as fail

        from student_course sc
        left join student s on s.user_id = sc.user_id
        left join class c on c.major_id = s.class_id
        left join teacher_course tc on sc.teach_id = tc.teach_id
        left join course cour on cour.course_id = tc.course_id
            ${ew.customSqlSegment}
        group by c.class_id, tc.teach_id

    </select>
    <select id="count" resultType="java.lang.Long">
        select
            count(*)
        from student_course sc
                 left join student s on s.user_id = sc.user_id
                 left join class c on c.major_id = s.class_id
                 left join teacher_course tc on sc.teach_id = tc.teach_id
                 left join course cour on cour.course_id = tc.course_id
            ${ew.customSqlSegment}
        group by c.class_id, tc.teach_id
    </select>
</mapper>
